> data <- read.csv("CETM72 Assignment Dataset.csv") # Loading Data
> View(data)
> sapply(data, function(x)(sum(is.na(x)))) # Counting the  variables any missing!
                                                                     gender 
                                                                          0 
                                                      Nationality.ethnicity 
                                                                          0 
                                      Cognitive.Abilities.Test..CAT4..Level 
                                                                          0 
Length.of.Enrolment_Has.the.student.been.enrolled.since.Grade.1.or.earlier. 
                                                                          0 
                                                 Efforts.on.course.material 
                                                                          0 
                                                                 math.score 
                                                                          0 
                                                              english.score 
                                                                          0 
                                                              science.score 
                                                                          0 
> names(data) # Variables names
[1] "gender"                                                                     
[2] "Nationality.ethnicity"                                                      
[3] "Cognitive.Abilities.Test..CAT4..Level"                                      
[4] "Length.of.Enrolment_Has.the.student.been.enrolled.since.Grade.1.or.earlier."
[5] "Efforts.on.course.material"                                                 
[6] "math.score"                                                                 
[7] "english.score"                                                              
[8] "science.score"                                                              
> dim(data)   # Data Dimension
[1] 182   8
> summary(data) # Summary data
    gender          Nationality.ethnicity Cognitive.Abilities.Test..CAT4..Level
 Length:182         Length:182            Length:182                           
 Class :character   Class :character      Class :character                     
 Mode  :character   Mode  :character      Mode  :character                     
                                                                               
                                                                               
                                                                               
 Length.of.Enrolment_Has.the.student.been.enrolled.since.Grade.1.or.earlier. Efforts.on.course.material
 Length:182                                                                  Length:182                
 Class :character                                                            Class :character          
 Mode  :character                                                            Mode  :character          
                                                                                                       
                                                                                                       
                                                                                                       
   math.score     english.score    science.score   
 Min.   : 30.00   Min.   : 38.00   Min.   : 40.00  
 1st Qu.: 60.00   1st Qu.: 60.00   1st Qu.: 62.00  
 Median : 70.00   Median : 70.00   Median : 73.00  
 Mean   : 71.17   Mean   : 69.97   Mean   : 72.23  
 3rd Qu.: 81.00   3rd Qu.: 80.75   3rd Qu.: 82.75  
 Max.   :100.00   Max.   :100.00   Max.   :100.00  
> # Renaming the columns for the ease of use
> names(data)[c(3)] <- c("CAT4.score") # Cognitive Abilities Test (CAT4) Level
> names(data)[c(4)] <- c("home.grown") # Student been enrolled 5 or more years?
> names(data)[c(5)] <- c("study_materials") # Student attempt on course materials.
> View(data)
> id <- rownames(data) # Generate id column
> data <- cbind(id=id, data)
> View(data)
> dim(data) # Dimension & summary of variables
[1] 182   9
> summary(data[,"math.score", drop=FALSE], statistics=c("mean", "sd", "IQR",  "quantiles", "skewness", "kurtosis"), quantiles=c(0,.25,.5,.75,1), type="2")
   math.score    
 Min.   : 30.00  
 1st Qu.: 60.00  
 Median : 70.00  
 Mean   : 71.17  
 3rd Qu.: 81.00  
 Max.   :100.00  
> summary(data[,"science.score", drop=FALSE], statistics=c("mean", "sd", "IQR", "quantiles", "skewness", "kurtosis"), quantiles=c(0,.25,.5,.75,1), type="2")
 science.score   
 Min.   : 40.00  
 1st Qu.: 62.00  
 Median : 73.00  
 Mean   : 72.23  
 3rd Qu.: 82.75  
 Max.   :100.00  
> summary(data[,"english.score", drop=FALSE], statistics=c("mean", "sd", "IQR", "quantiles", "skewness", "kurtosis"), quantiles=c(0,.25,.5,.75,1), type="2")
 english.score   
 Min.   : 38.00  
 1st Qu.: 60.00  
 Median : 70.00  
 Mean   : 69.97  
 3rd Qu.: 80.75  
 Max.   :100.00  
> 
> ###################### DATA VISUALIZATION ######################
> boxplot(math.score) 
> mean(math.score)
[1] 71.17033
> hist(math.score)          # Is Math score distribution normal?
> shapiro.test(math.score)  

	Shapiro-Wilk normality test

data:  math.score
W = 0.98311, p-value = 0.02688

> wilcox.test (math.score, mu=100, alternative="less")  

	Wilcoxon signed rank test with continuity correction

data:  math.score
V = 0, p-value < 2.2e-16
alternative hypothesis: true location is less than 100

> boxplot(english.score)
> mean(english.score)
[1] 69.97253
> hist(english.score)  # Is English scores distribution normal?
> shapiro.test(english.score)

	Shapiro-Wilk normality test

data:  english.score
W = 0.98519, p-value = 0.05182

> wilcox.test (english.score, mu=100, alternative="less") 

	Wilcoxon signed rank test with continuity correction

data:  english.score
V = 0, p-value < 2.2e-16
alternative hypothesis: true location is less than 100

> boxplot(science.score)
> mean(science.score)
[1] 72.22527
> hist(science.score) # Is Science scores distribution normal?
> shapiro.test(science.score)

	Shapiro-Wilk normality test

data:  science.score
W = 0.9833, p-value = 0.0285

> wilcox.test (science.score, mu=100, alternative="less") 

	Wilcoxon signed rank test with continuity correction

data:  science.score
V = 0, p-value < 2.2e-16
alternative hypothesis: true location is less than 100

> 
> # Does attempting the End of year study material affect student’s scores?
> boxplot(math.score~study_materials,data=data, col=rainbow(7), xlab=" study_materials", ylab="Math Score") # Maths study materials
> boxplot(english.score~study_materials,data=data, col=rainbow(9), xlab=" study_materials ", ylab="English Score") # English study materials
> boxplot(science.score~study_materials,data=data, col=rainbow(9), xlab=" study_materials ", ylab="science Score") # Science study materials
> # Does gender influence student Performance in Exams?
> boxplot(math.score~gender,data=data, col=rainbow(7), xlab=" Gender", ylab="Math Score") 
> boxplot(english.score~gender,data=data, col=rainbow(9), xlab=" Gender", ylab="English Score") 
> boxplot(science.score~gender,data=data, col=rainbow(9), xlab=" Gender", ylab="science Score") 
> # Does student’s Cognitive Abilities Test (CAT4) result influence their Performance in Exams?
> boxplot(math.score~CAT4.score,data=data, col=rainbow(7), xlab=" CAT4.score", ylab="Math Score") 
> boxplot(english.score~CAT4.score,data=data, col=rainbow(9), xlab=" CAT4.score", ylab="English Score") 
> boxplot(science.score~CAT4.score,data=data, col=rainbow(9), xlab=" CAT4.score", ylab="science Score") 
> 
> 
> # Independent t test and Correlation of Scores
> boxplot(mean(math.score),mean(english.score),col=rainbow(7),xlab="Math_score & English_score", ylab="Average of scores")
> t.test(math.score,english.score)

	Welch Two Sample t-test

data:  math.score and english.score
t = 0.78519, df = 360.1, p-value = 0.4329
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -1.802198  4.197803
sample estimates:
mean of x mean of y 
 71.17033  69.97253 

> t.test(math.score,english.score, alternative='less',mu=70)

	Welch Two Sample t-test

data:  math.score and english.score
t = -45.102, df = 360.1, p-value < 2.2e-16
alternative hypothesis: true difference in means is less than 70
95 percent confidence interval:
     -Inf 3.713492
sample estimates:
mean of x mean of y 
 71.17033  69.97253 

> t.test(math.score,english.score, alternative='greater',mu=70)

	Welch Two Sample t-test

data:  math.score and english.score
t = -45.102, df = 360.1, p-value = 1
alternative hypothesis: true difference in means is greater than 70
95 percent confidence interval:
 -1.317887       Inf
sample estimates:
mean of x mean of y 
 71.17033  69.97253 

> ggplot(data, aes(x = math.score, y =english.score)) + geom_point()    # Plotting the correlation graph of Math and English scores
> 
> boxplot(mean(math.score),mean(science.score),col=rainbow(7),xlab="Math_score & Science_score", ylab="Average of scores")
> t.test(math.score,science.score)

	Welch Two Sample t-test

data:  math.score and science.score
t = -0.68394, df = 361.12, p-value = 0.4944
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -4.088247  1.978357
sample estimates:
mean of x mean of y 
 71.17033  72.22527 

> t.test(math.score,science.score, alternative='less',mu=70)

	Welch Two Sample t-test

data:  math.score and science.score
t = -46.066, df = 361.12, p-value < 2.2e-16
alternative hypothesis: true difference in means is less than 70
95 percent confidence interval:
     -Inf 1.488676
sample estimates:
mean of x mean of y 
 71.17033  72.22527 

> t.test(math.score,science.score, alternative='greater',mu=70)

	Welch Two Sample t-test

data:  math.score and science.score
t = -46.066, df = 361.12, p-value = 1
alternative hypothesis: true difference in means is greater than 70
95 percent confidence interval:
 -3.598566       Inf
sample estimates:
mean of x mean of y 
 71.17033  72.22527 

> ggplot(data, aes(x =math.score, y = science.score)) + geom_point() # Plotting the correlation graph of Math and Science scores
> boxplot(mean(english.score),mean(science.score),col=rainbow(7),xlab="Math_score & Science_score", ylab="Average of scores")
> t.test(english.score,science.score)

	Welch Two Sample t-test

data:  english.score and science.score
t = -1.5154, df = 361.8, p-value = 0.1305
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -5.1761587  0.6706642
sample estimates:
mean of x mean of y 
 69.97253  72.22527 

> t.test(english.score,science.score, alternative='less',mu=70)

	Welch Two Sample t-test

data:  english.score and science.score
t = -48.604, df = 361.8, p-value < 2.2e-16
alternative hypothesis: true difference in means is less than 70
95 percent confidence interval:
      -Inf 0.1987269
sample estimates:
mean of x mean of y 
 69.97253  72.22527 

> t.test(english.score,science.score, alternative='greater',mu=70)

	Welch Two Sample t-test

data:  english.score and science.score
t = -48.604, df = 361.8, p-value = 1
alternative hypothesis: true difference in means is greater than 70
95 percent confidence interval:
 -4.704221       Inf
sample estimates:
mean of x mean of y 
 69.97253  72.22527 

> ggplot(data, aes(x =english.score, y = science.score)) + geom_point() # Plotting the correlation graph of English and Science
> 
> #Creating data frame 
> set.seed(0)
> math.score <- rnorm(100) 
> english.score <- math.score + rnorm(100, 0, 2)
> science.score <- english.score - rnorm(100, 0, 5)
> df <- data.frame(math.score, english.score, science.score)
> pairs(df) 
> ggpairs(df)  # Pairs Plot of All Variables
> 
> #################### REGRESSION MODEL FOR EDUCATION DATA  #######################
> data[1]<- NULL  
> #Creating Testing and Training datasets.
> set.seed(1)  
> sample = sample(nrow(data), floor(nrow(data) * 0.8))  
> train = data[sample,]
> test = data[-sample,]
> dim(train) #Cheking dimension of training
[1] 145   8
> dim(test) #Cheking test data
[1] 37  8
> 
> 
> #Creating model with the training data for prediction of Scores
> modelM <- lm(math.score~. , data=data) #Creating model to predict Math score
> model_math1 = lm(math.score~., data = train)
> summary(model_math1)

Call:
lm(formula = math.score ~ ., data = train)

Residuals:
     Min       1Q   Median       3Q      Max 
-18.8186  -4.8685  -0.2747   4.4066  19.6900 

Coefficients:
                              Estimate Std. Error t value Pr(>|t|)    
(Intercept)                   31.74202    7.76022   4.090 7.51e-05 ***
gendermale                    -0.41402    1.36613  -0.303  0.76233    
Nationality.ethnicityGroup B  -1.75015    1.46449  -1.195  0.23424    
Nationality.ethnicityGroup C  -2.03551    1.79825  -1.132  0.25974    
Nationality.ethnicityGroup D   4.26119    4.61931   0.922  0.35799    
Nationality.ethnicityGroup E   3.18469    4.08816   0.779  0.43739    
CAT4.scoreAverage             -8.38506    2.56154  -3.273  0.00136 ** 
CAT4.scoreBelowAverage        -8.94876    3.03714  -2.946  0.00381 ** 
CAT4.scoreVeryHigh            -0.01781    4.11688  -0.004  0.99655    
CAT4.scoreVerylow            -15.50638    4.80561  -3.227  0.00158 ** 
home.grownYes                  0.23089    1.34401   0.172  0.86387    
study_materialsincomplete     -2.38009    1.57919  -1.507  0.13420    
study_materialsNo attempt     -7.69259    2.75013  -2.797  0.00594 ** 
english.score                  0.14137    0.09179   1.540  0.12594    
science.score                  0.55647    0.09678   5.750 6.05e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 7.366 on 130 degrees of freedom
Multiple R-squared:  0.7716,	Adjusted R-squared:  0.747 
F-statistic: 31.37 on 14 and 130 DF,  p-value: < 2.2e-16

> pred_math = predict(model_math1, newdata = test)
> sqrt(mean((test$math.score - pred_math)^2))   
[1] 7.232586
> summary(modelM)   

Call:
lm(formula = math.score ~ ., data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-19.1527  -4.4692  -0.1637   4.1541  19.3968 

Coefficients:
                              Estimate Std. Error t value Pr(>|t|)    
(Intercept)                   31.15260    6.56380   4.746 4.43e-06 ***
gendermale                    -0.91534    1.18152  -0.775 0.439607    
Nationality.ethnicityGroup B  -1.49573    1.29307  -1.157 0.249033    
Nationality.ethnicityGroup C  -1.15243    1.60152  -0.720 0.472787    
Nationality.ethnicityGroup D   0.51670    3.60379   0.143 0.886164    
Nationality.ethnicityGroup E   0.13505    3.23769   0.042 0.966777    
CAT4.scoreAverage             -8.10237    2.34059  -3.462 0.000682 ***
CAT4.scoreBelowAverage        -9.80101    2.69542  -3.636 0.000368 ***
CAT4.scoreVeryHigh            -0.78281    3.52057  -0.222 0.824310    
CAT4.scoreVerylow            -17.04242    4.22113  -4.037 8.22e-05 ***
home.grownYes                  1.22445    1.17283   1.044 0.297988    
study_materialsincomplete     -2.81454    1.38548  -2.031 0.043795 *  
study_materialsNo attempt     -8.33577    2.43424  -3.424 0.000775 ***
english.score                  0.13021    0.07581   1.718 0.087718 .  
science.score                  0.57228    0.08035   7.122 3.02e-11 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 7.218 on 167 degrees of freedom
Multiple R-squared:  0.7884,	Adjusted R-squared:  0.7706 
F-statistic: 44.44 on 14 and 167 DF,  p-value: < 2.2e-16

> 
> modelE <- lm(english.score~. , data=data) #Creating model to predict English score
> model_english = lm(english.score~., data = train)
> summary(model_english)

Call:
lm(formula = english.score ~ ., data = train)

Residuals:
     Min       1Q   Median       3Q      Max 
-22.9900  -4.0359   0.9682   4.5747  12.4808 

Coefficients:
                             Estimate Std. Error t value Pr(>|t|)    
(Intercept)                  22.52352    7.55267   2.982  0.00342 ** 
gendermale                   -1.79716    1.28442  -1.399  0.16414    
Nationality.ethnicityGroup B  0.72143    1.39290   0.518  0.60538    
Nationality.ethnicityGroup C  2.82034    1.69317   1.666  0.09818 .  
Nationality.ethnicityGroup D  2.86999    4.38112   0.655  0.51357    
Nationality.ethnicityGroup E -8.19902    3.81291  -2.150  0.03338 *  
CAT4.scoreAverage            -3.24290    2.50744  -1.293  0.19820    
CAT4.scoreBelowAverage       -5.66090    2.92857  -1.933  0.05541 .  
CAT4.scoreVeryHigh           -1.32938    3.89655  -0.341  0.73353    
CAT4.scoreVerylow            -9.26179    4.65889  -1.988  0.04891 *  
home.grownYes                 0.11778    1.27276   0.093  0.92641    
study_materialsincomplete    -0.67253    1.50720  -0.446  0.65619    
study_materialsNo attempt    -0.63852    2.68075  -0.238  0.81211    
math.score                    0.12676    0.08230   1.540  0.12594    
science.score                 0.59925    0.08815   6.798 3.47e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.975 on 130 degrees of freedom
Multiple R-squared:  0.7447,	Adjusted R-squared:  0.7172 
F-statistic: 27.09 on 14 and 130 DF,  p-value: < 2.2e-16

> pred_english = predict(model_english, newdata = test)
> sqrt(mean((test$english.score - pred_english)^2))
[1] 9.029632
> summary(modelE)   

Call:
lm(formula = english.score ~ ., data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-23.586  -3.727   1.157   4.649  14.113 

Coefficients:
                             Estimate Std. Error t value Pr(>|t|)    
(Intercept)                  22.93913    6.84942   3.349   0.0010 ** 
gendermale                   -1.42818    1.19262  -1.198   0.2328    
Nationality.ethnicityGroup B -0.80233    1.31222  -0.611   0.5417    
Nationality.ethnicityGroup C  2.29588    1.61334   1.423   0.1566    
Nationality.ethnicityGroup D  2.56320    3.64150   0.704   0.4825    
Nationality.ethnicityGroup E -2.69960    3.26957  -0.826   0.4102    
CAT4.scoreAverage            -2.76271    2.44261  -1.131   0.2597    
CAT4.scoreBelowAverage       -5.27983    2.80380  -1.883   0.0614 .  
CAT4.scoreVeryHigh            2.52629    3.55763   0.710   0.4786    
CAT4.scoreVerylow            -9.44425    4.41489  -2.139   0.0339 *  
home.grownYes                -0.21052    1.19054  -0.177   0.8599    
study_materialsincomplete    -1.10483    1.41661  -0.780   0.4365    
study_materialsNo attempt    -2.85176    2.53865  -1.123   0.2629    
math.score                    0.13332    0.07762   1.718   0.0877 .  
science.score                 0.58999    0.08084   7.298 1.13e-11 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 7.304 on 167 degrees of freedom
Multiple R-squared:  0.7493,	Adjusted R-squared:  0.7283 
F-statistic: 35.66 on 14 and 167 DF,  p-value: < 2.2e-16

> 
> modelS <- lm(science.score~. , data=data) #Creating model to predict science score
> model_science = lm(science.score~., data = train)
> summary(model_science)

Call:
lm(formula = science.score ~ ., data = train)

Residuals:
    Min      1Q  Median      3Q     Max 
-13.982  -3.635   0.107   3.534  14.921 

Coefficients:
                             Estimate Std. Error t value Pr(>|t|)    
(Intercept)                  17.49692    6.49248   2.695  0.00797 ** 
gendermale                    1.52218    1.09777   1.387  0.16793    
Nationality.ethnicityGroup B  0.23401    1.19137   0.196  0.84459    
Nationality.ethnicityGroup C -1.07768    1.45923  -0.739  0.46153    
Nationality.ethnicityGroup D -0.66291    3.74968  -0.177  0.85995    
Nationality.ethnicityGroup E  1.43943    3.31342   0.434  0.66470    
CAT4.scoreAverage             0.64391    2.15577   0.299  0.76565    
CAT4.scoreBelowAverage       -2.67340    2.52752  -1.058  0.29215    
CAT4.scoreVeryHigh            3.61272    3.31625   1.089  0.27799    
CAT4.scoreVerylow            -0.84539    4.04071  -0.209  0.83461    
home.grownYes                -0.14821    1.08761  -0.136  0.89181    
study_materialsincomplete    -3.26114    1.25686  -2.595  0.01055 *  
study_materialsNo attempt    -6.64875    2.21593  -3.000  0.00323 ** 
math.score                    0.36437    0.06337   5.750 6.05e-08 ***
english.score                 0.43762    0.06438   6.798 3.47e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.961 on 130 degrees of freedom
Multiple R-squared:  0.8369,	Adjusted R-squared:  0.8193 
F-statistic: 47.64 on 14 and 130 DF,  p-value: < 2.2e-16

> pred_science = predict(model_science, newdata = test)
> sqrt(mean((test$science.score - pred_science)^2))
[1] 7.056869
> summary(modelS)

Call:
lm(formula = science.score ~ ., data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-14.923  -3.853   0.002   3.712  16.355 

Coefficients:
                             Estimate Std. Error t value Pr(>|t|)    
(Intercept)                  15.74595    5.77031   2.729  0.00704 ** 
gendermale                    1.06856    0.99487   1.074  0.28434    
Nationality.ethnicityGroup B  2.18820    1.08178   2.023  0.04469 *  
Nationality.ethnicityGroup C  0.01231    1.35283   0.009  0.99275    
Nationality.ethnicityGroup D  2.03702    3.03558   0.671  0.50312    
Nationality.ethnicityGroup E  0.99591    2.72964   0.365  0.71568    
CAT4.scoreAverage             0.17306    2.04364   0.085  0.93262    
CAT4.scoreBelowAverage       -2.03671    2.35637  -0.864  0.38864    
CAT4.scoreVeryHigh            0.47014    2.96952   0.158  0.87440    
CAT4.scoreVerylow            -0.80600    3.72934  -0.216  0.82915    
home.grownYes                -0.41136    0.99189  -0.415  0.67887    
study_materialsincomplete    -3.18332    1.15695  -2.751  0.00659 ** 
study_materialsNo attempt    -4.71561    2.09235  -2.254  0.02551 *  
math.score                    0.40709    0.05716   7.122 3.02e-11 ***
english.score                 0.40987    0.05616   7.298 1.13e-11 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.088 on 167 degrees of freedom
Multiple R-squared:  0.8339,	Adjusted R-squared:  0.8199 
F-statistic: 59.87 on 14 and 167 DF,  p-value: < 2.2e-16

> 
